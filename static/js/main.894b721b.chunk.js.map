{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","prevProps","clockName","props","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,E,4MACJC,MAAyB,CACvBC,KAAM,IAAIC,M,EAGZC,QAAU,E,uDAEV,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,IAAIR,KACX,O,gCAGL,SAAmBS,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQC,IAAR,uBAA4BC,EAAUC,UAAtC,eAAsDP,KAAKQ,MAAMD,c,kCAIrE,WACEE,cAAcT,KAAKD,W,oBAGrB,WACE,OACE,qBAAKW,UAAU,QAAf,SACGV,KAAKJ,MAAMC,KAAKc,2B,GA/BLC,aAqCLjB,IC3Cf,SAASkB,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJvB,MAAyB,CACvBwB,UAAU,EACVb,UAAWM,K,uDAGb,WAAqB,IAAD,OAClBQ,SAASC,iBAAiB,eAAe,WACvC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BlB,aAAY,WACV,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,Q,oBAGL,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,6CACA,wBAAQA,UAAU,cAAlB,SACGV,KAAKJ,MAAMW,YAEb,YACD,sBAAMG,UAAU,cAAhB,SACGV,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOb,UAAWP,KAAKJ,MAAMW,qB,GA7B7CK,aAoCHO,IChDfI,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.894b721b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date,\n};\n\nclass Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      // eslint-disable-next-line\n      console.log(date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import { Component } from 'react';\nimport './App.scss';\nimport Clock from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string\n};\n\nclass App extends Component {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <strong className=\"Clock__name\">\n          {this.state.clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}